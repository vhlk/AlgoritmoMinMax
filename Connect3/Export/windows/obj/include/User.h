// Generated by Haxe 4.2.0
#ifndef INCLUDED_User
#define INCLUDED_User

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_e9a77c089f21b886_5_new)
HX_DECLARE_CLASS0(User)



class HXCPP_CLASS_ATTRIBUTES User_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef User_obj OBJ_;
		User_obj();

	public:
		enum { _hx_ClassId = 0x0cd9b48f };

		void __construct(::hx::Null< bool >  __o_isUser);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="User")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"User"); }

		inline static ::hx::ObjectPtr< User_obj > __new(::hx::Null< bool >  __o_isUser) {
			::hx::ObjectPtr< User_obj > __this = new User_obj();
			__this->__construct(__o_isUser);
			return __this;
		}

		inline static ::hx::ObjectPtr< User_obj > __alloc(::hx::Ctx *_hx_ctx,::hx::Null< bool >  __o_isUser) {
			User_obj *__this = (User_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(User_obj), false, "User"));
			*(void **)__this = User_obj::_hx_vtable;
{
            		bool isUser = __o_isUser.Default(false);
            	HX_STACKFRAME(&_hx_pos_e9a77c089f21b886_5_new)
HXDLIN(   5)		( ( ::User)(__this) )->user = isUser;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~User_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("User",6b,be,86,38); }

		bool user;
};


#endif /* INCLUDED_User */ 
