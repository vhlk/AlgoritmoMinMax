// Generated by Haxe 4.2.0
#include <hxcpp.h>

#ifndef INCLUDED_Moves
#include <Moves.h>
#endif


void Moves_obj::__construct() { }

Dynamic Moves_obj::__CreateEmpty() { return new Moves_obj; }

void *Moves_obj::_hx_vtable = 0;

Dynamic Moves_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Moves_obj > _hx_result = new Moves_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Moves_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3c231162;
}


Moves_obj::Moves_obj()
{
}

::hx::Val Moves_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { return ::hx::Val( x ); }
		if (HX_FIELD_EQ(inName,"y") ) { return ::hx::Val( y ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Moves_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { x=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"y") ) { y=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Moves_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("x",78,00,00,00));
	outFields->push(HX_("y",79,00,00,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Moves_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(Moves_obj,x),HX_("x",78,00,00,00)},
	{::hx::fsInt,(int)offsetof(Moves_obj,y),HX_("y",79,00,00,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Moves_obj_sStaticStorageInfo = 0;
#endif

static ::String Moves_obj_sMemberFields[] = {
	HX_("x",78,00,00,00),
	HX_("y",79,00,00,00),
	::String(null()) };

::hx::Class Moves_obj::__mClass;

void Moves_obj::__register()
{
	Moves_obj _hx_dummy;
	Moves_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("Moves",22,3c,93,9f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Moves_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Moves_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Moves_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Moves_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

