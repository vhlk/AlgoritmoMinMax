// Generated by Haxe 4.2.0
#include <hxcpp.h>

#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_ValueType
#include <ValueType.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventBase
#include <haxe/ui/backend/EventBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventImpl
#include <haxe/ui/backend/EventImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_Behaviour
#include <haxe/ui/behaviours/Behaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_Behaviours
#include <haxe/ui/behaviours/Behaviours.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_DataBehaviour
#include <haxe/ui/behaviours/DataBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_DefaultBehaviour
#include <haxe/ui/behaviours/DefaultBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_ValueBehaviour
#include <haxe/ui/behaviours/ValueBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_binding_BindingManager
#include <haxe/ui/binding/BindingManager.h>
#endif
#ifndef INCLUDED_haxe_ui_components_TextArea
#include <haxe/ui/components/TextArea.h>
#endif
#ifndef INCLUDED_haxe_ui_components__TextArea_DataSourceBehaviour
#include <haxe/ui/components/_TextArea/DataSourceBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_components__TextArea_Events
#include <haxe/ui/components/_TextArea/Events.h>
#endif
#ifndef INCLUDED_haxe_ui_components__TextArea_PlaceholderBehaviour
#include <haxe/ui/components/_TextArea/PlaceholderBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_components__TextArea_ScrollToBottom
#include <haxe/ui/components/_TextArea/ScrollToBottom.h>
#endif
#ifndef INCLUDED_haxe_ui_components__TextArea_ScrollToTop
#include <haxe/ui/components/_TextArea/ScrollToTop.h>
#endif
#ifndef INCLUDED_haxe_ui_components__TextArea_TextAreaBuilder
#include <haxe/ui/components/_TextArea/TextAreaBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_components__TextArea_TextAreaLayout
#include <haxe/ui/components/_TextArea/TextAreaLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_components__TextArea_TextBehaviour
#include <haxe/ui/components/_TextArea/TextBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_components__TextArea_WrapBehaviour
#include <haxe/ui/components/_TextArea/WrapBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_CompositeBuilder
#include <haxe/ui/core/CompositeBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_core_InteractiveComponent
#include <haxe/ui/core/InteractiveComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_data_DataSource
#include <haxe/ui/data/DataSource.h>
#endif
#ifndef INCLUDED_haxe_ui_events_Events
#include <haxe/ui/events/Events.h>
#endif
#ifndef INCLUDED_haxe_ui_events_UIEvent
#include <haxe/ui/events/UIEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_focus_IFocusable
#include <haxe/ui/focus/IFocusable.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_DefaultLayout
#include <haxe/ui/layouts/DefaultLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_ILayout
#include <haxe/ui/layouts/ILayout.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_Layout
#include <haxe/ui/layouts/Layout.h>
#endif
#ifndef INCLUDED_haxe_ui_util_VariantType
#include <haxe/ui/util/VariantType.h>
#endif
#ifndef INCLUDED_haxe_ui_util__Variant_Variant_Impl_
#include <haxe/ui/util/_Variant/Variant_Impl_.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <haxe/ui/validation/IValidating.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_24565d82bfa0fa8b_24_new,"haxe.ui.components.TextArea","new",0xc5d01272,"haxe.ui.components.TextArea.new","haxe/ui/components/TextArea.hx",24,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_549fc4a9786f676c_464_scrollToTop,"haxe.ui.components.TextArea","scrollToTop",0x117f049f,"haxe.ui.components.TextArea.scrollToTop","haxe/ui/macros/Macros.hx",464,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_549fc4a9786f676c_464_scrollToBottom,"haxe.ui.components.TextArea","scrollToBottom",0x86652b21,"haxe.ui.components.TextArea.scrollToBottom","haxe/ui/macros/Macros.hx",464,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_24565d82bfa0fa8b_46_invalidateComponentScroll,"haxe.ui.components.TextArea","invalidateComponentScroll",0xdcd39901,"haxe.ui.components.TextArea.invalidateComponentScroll","haxe/ui/components/TextArea.hx",46,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_24565d82bfa0fa8b_49_validateComponentInternal,"haxe.ui.components.TextArea","validateComponentInternal",0xeedc5f36,"haxe.ui.components.TextArea.validateComponentInternal","haxe/ui/components/TextArea.hx",49,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_549fc4a9786f676c_369_registerBehaviours,"haxe.ui.components.TextArea","registerBehaviours",0x66688a07,"haxe.ui.components.TextArea.registerBehaviours","haxe/ui/macros/Macros.hx",369,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_549fc4a9786f676c_388_get_placeholder,"haxe.ui.components.TextArea","get_placeholder",0x1335401c,"haxe.ui.components.TextArea.get_placeholder","haxe/ui/macros/Macros.hx",388,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_549fc4a9786f676c_417_set_placeholder,"haxe.ui.components.TextArea","set_placeholder",0x0f00bd28,"haxe.ui.components.TextArea.set_placeholder","haxe/ui/macros/Macros.hx",417,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_549fc4a9786f676c_388_get_wrap,"haxe.ui.components.TextArea","get_wrap",0x67faf201,"haxe.ui.components.TextArea.get_wrap","haxe/ui/macros/Macros.hx",388,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_549fc4a9786f676c_431_set_wrap,"haxe.ui.components.TextArea","set_wrap",0x16584b75,"haxe.ui.components.TextArea.set_wrap","haxe/ui/macros/Macros.hx",431,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_549fc4a9786f676c_388_get_dataSource,"haxe.ui.components.TextArea","get_dataSource",0x0185b21c,"haxe.ui.components.TextArea.get_dataSource","haxe/ui/macros/Macros.hx",388,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_549fc4a9786f676c_431_set_dataSource,"haxe.ui.components.TextArea","set_dataSource",0x21a59a90,"haxe.ui.components.TextArea.set_dataSource","haxe/ui/macros/Macros.hx",431,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_549fc4a9786f676c_388_get_autoScrollToBottom,"haxe.ui.components.TextArea","get_autoScrollToBottom",0x06547a39,"haxe.ui.components.TextArea.get_autoScrollToBottom","haxe/ui/macros/Macros.hx",388,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_549fc4a9786f676c_431_set_autoScrollToBottom,"haxe.ui.components.TextArea","set_autoScrollToBottom",0x39fff6ad,"haxe.ui.components.TextArea.set_autoScrollToBottom","haxe/ui/macros/Macros.hx",431,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_549fc4a9786f676c_495_get_value,"haxe.ui.components.TextArea","get_value",0xf4fdf75a,"haxe.ui.components.TextArea.get_value","haxe/ui/macros/Macros.hx",495,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_549fc4a9786f676c_498_set_value,"haxe.ui.components.TextArea","set_value",0xd84ee366,"haxe.ui.components.TextArea.set_value","haxe/ui/macros/Macros.hx",498,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_1f389074ead2ba68_525_cloneComponent,"haxe.ui.components.TextArea","cloneComponent",0x94139cce,"haxe.ui.components.TextArea.cloneComponent","haxe/ui/macros/helpers/ClassBuilder.hx",525,0x8cdaad7b)
HX_LOCAL_STACK_FRAME(_hx_pos_549fc4a9786f676c_351_self,"haxe.ui.components.TextArea","self",0x538e193a,"haxe.ui.components.TextArea.self","haxe/ui/macros/Macros.hx",351,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_549fc4a9786f676c_71_registerComposite,"haxe.ui.components.TextArea","registerComposite",0x3ddce2b6,"haxe.ui.components.TextArea.registerComposite","haxe/ui/macros/Macros.hx",71,0x27866361)
namespace haxe{
namespace ui{
namespace components{

void TextArea_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_24565d82bfa0fa8b_24_new)
HXDLIN(  24)		super::__construct();
            	}

Dynamic TextArea_obj::__CreateEmpty() { return new TextArea_obj; }

void *TextArea_obj::_hx_vtable = 0;

Dynamic TextArea_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TextArea_obj > _hx_result = new TextArea_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TextArea_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x241b0321) {
		if (inClassId<=(int)0x0f2dd418) {
			if (inClassId<=(int)0x0330636f) {
				if (inClassId<=(int)0x01557b4b) {
					return inClassId==(int)0x00000001 || inClassId==(int)0x01557b4b;
				} else {
					return inClassId==(int)0x0330636f;
				}
			} else {
				return inClassId==(int)0x0c89e854 || inClassId==(int)0x0f2dd418;
			}
		} else {
			if (inClassId<=(int)0x1f4df417) {
				if (inClassId<=(int)0x13d76ae7) {
					return inClassId==(int)0x1395e371 || inClassId==(int)0x13d76ae7;
				} else {
					return inClassId==(int)0x1f4df417;
				}
			} else {
				return inClassId==(int)0x241b0321;
			}
		}
	} else {
		if (inClassId<=(int)0x715d6dae) {
			if (inClassId<=(int)0x4af7dd8e) {
				if (inClassId<=(int)0x395782b4) {
					return inClassId==(int)0x2ccba775 || inClassId==(int)0x395782b4;
				} else {
					return inClassId==(int)0x4af7dd8e;
				}
			} else {
				return inClassId==(int)0x6b353933 || inClassId==(int)0x715d6dae;
			}
		} else {
			if (inClassId<=(int)0x7738538a) {
				return inClassId==(int)0x72c347e4 || inClassId==(int)0x7738538a;
			} else {
				return inClassId==(int)0x7ec24579;
			}
		}
	}
}

static ::haxe::ui::focus::IFocusable_obj _hx_haxe_ui_components_TextArea__hx_haxe_ui_focus_IFocusable= {
	( bool (::hx::Object::*)())&::haxe::ui::components::TextArea_obj::get_focus,
	( bool (::hx::Object::*)(bool))&::haxe::ui::components::TextArea_obj::set_focus,
	( bool (::hx::Object::*)())&::haxe::ui::components::TextArea_obj::get_allowFocus,
	( bool (::hx::Object::*)(bool))&::haxe::ui::components::TextArea_obj::set_allowFocus,
};

void *TextArea_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x04f087c7: return &_hx_haxe_ui_components_TextArea__hx_haxe_ui_focus_IFocusable;
	}
	return super::_hx_getInterface(inHash);
}

 ::haxe::ui::util::VariantType TextArea_obj::scrollToTop(){
            	HX_STACKFRAME(&_hx_pos_549fc4a9786f676c_464_scrollToTop)
HXDLIN( 464)		return this->behaviours->call(HX_("scrollToTop",8d,60,f7,5d),null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(TextArea_obj,scrollToTop,return )

 ::haxe::ui::util::VariantType TextArea_obj::scrollToBottom(){
            	HX_STACKFRAME(&_hx_pos_549fc4a9786f676c_464_scrollToBottom)
HXDLIN( 464)		return this->behaviours->call(HX_("scrollToBottom",f3,77,a8,18),null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(TextArea_obj,scrollToBottom,return )

void TextArea_obj::invalidateComponentScroll(){
            	HX_STACKFRAME(&_hx_pos_24565d82bfa0fa8b_46_invalidateComponentScroll)
HXDLIN(  46)		this->invalidateComponent(HX_("scroll",0d,d8,64,47));
            	}


HX_DEFINE_DYNAMIC_FUNC0(TextArea_obj,invalidateComponentScroll,(void))

void TextArea_obj::validateComponentInternal(::hx::Null< bool >  __o_nextFrame){
            		bool nextFrame = __o_nextFrame.Default(true);
            	HX_STACKFRAME(&_hx_pos_24565d82bfa0fa8b_49_validateComponentInternal)
HXLINE(  50)		bool dataInvalid = this->isComponentInvalid(HX_("data",2a,56,63,42));
HXLINE(  51)		bool scrollInvalid = this->isComponentInvalid(HX_("scroll",0d,d8,64,47));
HXLINE(  52)		bool layoutInvalid = this->isComponentInvalid(HX_("layout",aa,ae,b8,58));
HXLINE(  54)		this->super::validateComponentInternal(nextFrame);
HXLINE(  56)		bool _hx_tmp;
HXDLIN(  56)		bool _hx_tmp1;
HXDLIN(  56)		if (!(scrollInvalid)) {
HXLINE(  56)			_hx_tmp1 = layoutInvalid;
            		}
            		else {
HXLINE(  56)			_hx_tmp1 = true;
            		}
HXDLIN(  56)		if (!(_hx_tmp1)) {
HXLINE(  56)			_hx_tmp = dataInvalid;
            		}
            		else {
HXLINE(  56)			_hx_tmp = true;
            		}
HXDLIN(  56)		if (_hx_tmp) {
HXLINE(  57)			if (::hx::IsNotNull( this->_compositeBuilder )) {
HXLINE(  58)				::hx::TCast<  ::haxe::ui::components::_TextArea::TextAreaBuilder >::cast(this->_compositeBuilder)->checkScrolls();
            			}
            		}
            	}


void TextArea_obj::registerBehaviours(){
            	HX_STACKFRAME(&_hx_pos_549fc4a9786f676c_369_registerBehaviours)
HXLINE( 370)		this->super::registerBehaviours();
HXLINE( 447)		this->behaviours->_hx_register(HX_("text",ad,cc,f9,4c),::hx::ClassOf< ::haxe::ui::components::_TextArea::TextBehaviour >(),null());
HXDLIN( 447)		this->behaviours->_hx_register(HX_("placeholder",73,73,f3,ba),::hx::ClassOf< ::haxe::ui::components::_TextArea::PlaceholderBehaviour >(),null());
HXLINE( 451)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 451)		_hx_tmp->_hx_register(HX_("wrap",ca,39,ff,4e),::hx::ClassOf< ::haxe::ui::components::_TextArea::WrapBehaviour >(),::haxe::ui::util::_Variant::Variant_Impl__obj::fromBool(true));
HXLINE( 447)		this->behaviours->_hx_register(HX_("dataSource",a5,76,d3,1d),::hx::ClassOf< ::haxe::ui::components::_TextArea::DataSourceBehaviour >(),null());
HXDLIN( 447)		this->behaviours->_hx_register(HX_("autoScrollToBottom",c2,6f,37,6f),::hx::ClassOf< ::haxe::ui::behaviours::DefaultBehaviour >(),null());
HXLINE( 470)		this->behaviours->_hx_register(HX_("scrollToTop",8d,60,f7,5d),::hx::ClassOf< ::haxe::ui::components::_TextArea::ScrollToTop >(),null());
HXDLIN( 470)		this->behaviours->_hx_register(HX_("scrollToBottom",f3,77,a8,18),::hx::ClassOf< ::haxe::ui::components::_TextArea::ScrollToBottom >(),null());
            	}


::String TextArea_obj::get_placeholder(){
            	HX_STACKFRAME(&_hx_pos_549fc4a9786f676c_388_get_placeholder)
HXDLIN( 388)		return ::haxe::ui::util::_Variant::Variant_Impl__obj::toString(this->behaviours->get(HX_("placeholder",73,73,f3,ba)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(TextArea_obj,get_placeholder,return )

::String TextArea_obj::set_placeholder(::String value){
            	HX_GC_STACKFRAME(&_hx_pos_549fc4a9786f676c_417_set_placeholder)
HXLINE( 418)		{
HXLINE( 418)			 ::ValueType _g = ::Type_obj::_hx_typeof(value);
HXDLIN( 418)			if ((_g->_hx_getIndex() == 6)) {
HXLINE( 419)				if (::hx::IsPointerEq( _g->_hx_getObject(0).StaticCast< ::hx::Class >(),::hx::ClassOf< ::String >() )) {
HXLINE( 420)					bool _hx_tmp;
HXDLIN( 420)					bool _hx_tmp1;
HXDLIN( 420)					if (::hx::IsNotNull( value )) {
HXLINE( 420)						_hx_tmp1 = (value.indexOf(HX_("{{",a0,6b,00,00),null()) != -1);
            					}
            					else {
HXLINE( 420)						_hx_tmp1 = false;
            					}
HXDLIN( 420)					if (_hx_tmp1) {
HXLINE( 420)						_hx_tmp = (value.indexOf(HX_("}}",60,6d,00,00),null()) != -1);
            					}
            					else {
HXLINE( 420)						_hx_tmp = false;
            					}
HXDLIN( 420)					if (_hx_tmp) {
HXLINE( 421)						::haxe::ui::binding::BindingManager_obj::get_instance()->addLanguageBinding(( ( ::haxe::ui::core::Component)(::hx::ObjectPtr<OBJ_>(this)) ),HX_("placeholder",73,73,f3,ba),value,null());
HXLINE( 422)						return value;
            					}
            				}
            			}
            		}
HXLINE( 426)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 426)		_hx_tmp->set(HX_("placeholder",73,73,f3,ba),::haxe::ui::util::_Variant::Variant_Impl__obj::fromString(value));
HXLINE( 427)		this->dispatch( ::haxe::ui::events::UIEvent_obj::__alloc( HX_CTX ,HX_("propertyChange",a5,bb,45,6a),null(),HX_("placeholder",73,73,f3,ba)));
HXLINE( 244)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(::hx::ObjectPtr<OBJ_>(this)) ),HX_("placeholder",73,73,f3,ba));
HXLINE( 428)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(TextArea_obj,set_placeholder,return )

bool TextArea_obj::get_wrap(){
            	HX_STACKFRAME(&_hx_pos_549fc4a9786f676c_388_get_wrap)
HXDLIN( 388)		return ::haxe::ui::util::_Variant::Variant_Impl__obj::toBool(this->behaviours->get(HX_("wrap",ca,39,ff,4e)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(TextArea_obj,get_wrap,return )

bool TextArea_obj::set_wrap(bool value){
            	HX_GC_STACKFRAME(&_hx_pos_549fc4a9786f676c_431_set_wrap)
HXLINE( 432)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 432)		_hx_tmp->set(HX_("wrap",ca,39,ff,4e),::haxe::ui::util::_Variant::Variant_Impl__obj::fromBool(value));
HXLINE( 433)		this->dispatch( ::haxe::ui::events::UIEvent_obj::__alloc( HX_CTX ,HX_("propertyChange",a5,bb,45,6a),null(),HX_("wrap",ca,39,ff,4e)));
HXLINE( 244)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(::hx::ObjectPtr<OBJ_>(this)) ),HX_("wrap",ca,39,ff,4e));
HXLINE( 434)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(TextArea_obj,set_wrap,return )

 ::haxe::ui::data::DataSource TextArea_obj::get_dataSource(){
            	HX_STACKFRAME(&_hx_pos_549fc4a9786f676c_388_get_dataSource)
HXDLIN( 388)		return ::haxe::ui::util::_Variant::Variant_Impl__obj::toDataSource(this->behaviours->get(HX_("dataSource",a5,76,d3,1d)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(TextArea_obj,get_dataSource,return )

 ::haxe::ui::data::DataSource TextArea_obj::set_dataSource( ::haxe::ui::data::DataSource value){
            	HX_GC_STACKFRAME(&_hx_pos_549fc4a9786f676c_431_set_dataSource)
HXLINE( 432)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 432)		_hx_tmp->set(HX_("dataSource",a5,76,d3,1d),::haxe::ui::util::_Variant::Variant_Impl__obj::fromDataSource(value));
HXLINE( 433)		this->dispatch( ::haxe::ui::events::UIEvent_obj::__alloc( HX_CTX ,HX_("propertyChange",a5,bb,45,6a),null(),HX_("dataSource",a5,76,d3,1d)));
HXLINE( 244)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(::hx::ObjectPtr<OBJ_>(this)) ),HX_("dataSource",a5,76,d3,1d));
HXLINE( 434)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(TextArea_obj,set_dataSource,return )

bool TextArea_obj::get_autoScrollToBottom(){
            	HX_STACKFRAME(&_hx_pos_549fc4a9786f676c_388_get_autoScrollToBottom)
HXDLIN( 388)		return ::haxe::ui::util::_Variant::Variant_Impl__obj::toBool(this->behaviours->get(HX_("autoScrollToBottom",c2,6f,37,6f)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(TextArea_obj,get_autoScrollToBottom,return )

bool TextArea_obj::set_autoScrollToBottom(bool value){
            	HX_GC_STACKFRAME(&_hx_pos_549fc4a9786f676c_431_set_autoScrollToBottom)
HXLINE( 432)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 432)		_hx_tmp->set(HX_("autoScrollToBottom",c2,6f,37,6f),::haxe::ui::util::_Variant::Variant_Impl__obj::fromBool(value));
HXLINE( 433)		this->dispatch( ::haxe::ui::events::UIEvent_obj::__alloc( HX_CTX ,HX_("propertyChange",a5,bb,45,6a),null(),HX_("autoScrollToBottom",c2,6f,37,6f)));
HXLINE( 244)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(::hx::ObjectPtr<OBJ_>(this)) ),HX_("autoScrollToBottom",c2,6f,37,6f));
HXLINE( 434)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(TextArea_obj,set_autoScrollToBottom,return )

 ::Dynamic TextArea_obj::get_value(){
            	HX_STACKFRAME(&_hx_pos_549fc4a9786f676c_495_get_value)
HXDLIN( 495)		return this->get_text();
            	}


 ::Dynamic TextArea_obj::set_value( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_549fc4a9786f676c_498_set_value)
HXLINE( 499)		this->set_text(( (::String)(value) ));
HXLINE( 500)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(::hx::ObjectPtr<OBJ_>(this),HX_("text",ad,cc,f9,4c));
HXLINE( 501)		return value;
            	}


 ::haxe::ui::core::ComponentContainer TextArea_obj::cloneComponent(){
            	HX_STACKFRAME(&_hx_pos_1f389074ead2ba68_525_cloneComponent)
HXLINE( 300)		 ::haxe::ui::components::TextArea c = ( ( ::haxe::ui::components::TextArea)(this->super::cloneComponent()) );
HXLINE( 316)		::Array< ::Dynamic> _hx_tmp;
HXDLIN( 316)		if (::hx::IsNull( this->_children )) {
HXLINE( 316)			_hx_tmp = ::Array_obj< ::Dynamic>::__new(0);
            		}
            		else {
HXLINE( 316)			_hx_tmp = this->_children;
            		}
HXDLIN( 316)		::Array< ::Dynamic> _hx_tmp1;
HXDLIN( 316)		if (::hx::IsNull( c->_children )) {
HXLINE( 316)			_hx_tmp1 = ::Array_obj< ::Dynamic>::__new(0);
            		}
            		else {
HXLINE( 316)			_hx_tmp1 = c->_children;
            		}
HXDLIN( 316)		if ((_hx_tmp->length != _hx_tmp1->length)) {
HXLINE( 317)			int _g = 0;
HXDLIN( 317)			::Array< ::Dynamic> _g1;
HXDLIN( 317)			if (::hx::IsNull( this->_children )) {
HXLINE( 317)				_g1 = ::Array_obj< ::Dynamic>::__new(0);
            			}
            			else {
HXLINE( 317)				_g1 = this->_children;
            			}
HXDLIN( 317)			while((_g < _g1->length)){
HXLINE( 317)				 ::haxe::ui::core::Component child = _g1->__get(_g).StaticCast<  ::haxe::ui::core::Component >();
HXDLIN( 317)				_g = (_g + 1);
HXLINE( 318)				c->addComponent(Dynamic( child->cloneComponent()).StaticCast<  ::haxe::ui::core::Component >());
            			}
            		}
HXLINE( 322)		::haxe::ui::binding::BindingManager_obj::get_instance()->cloneBinding(( ( ::haxe::ui::core::Component)(::hx::ObjectPtr<OBJ_>(this)) ),( ( ::haxe::ui::core::Component)(c) ));
HXLINE( 323)		return c;
            	}


 ::haxe::ui::core::ComponentContainer TextArea_obj::self(){
            	HX_GC_STACKFRAME(&_hx_pos_549fc4a9786f676c_351_self)
HXDLIN( 351)		return  ::haxe::ui::components::TextArea_obj::__alloc( HX_CTX );
            	}


void TextArea_obj::registerComposite(){
            	HX_STACKFRAME(&_hx_pos_549fc4a9786f676c_71_registerComposite)
HXLINE(  72)		this->super::registerComposite();
HXLINE(  80)		this->_internalEventsClass = ::hx::ClassOf< ::haxe::ui::components::_TextArea::Events >();
HXLINE(  84)		this->_compositeBuilderClass = ::hx::ClassOf< ::haxe::ui::components::_TextArea::TextAreaBuilder >();
HXLINE(  88)		this->_defaultLayoutClass = ::hx::ClassOf< ::haxe::ui::components::_TextArea::TextAreaLayout >();
            	}



::hx::ObjectPtr< TextArea_obj > TextArea_obj::__new() {
	::hx::ObjectPtr< TextArea_obj > __this = new TextArea_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< TextArea_obj > TextArea_obj::__alloc(::hx::Ctx *_hx_ctx) {
	TextArea_obj *__this = (TextArea_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TextArea_obj), true, "haxe.ui.components.TextArea"));
	*(void **)__this = TextArea_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

TextArea_obj::TextArea_obj()
{
}

::hx::Val TextArea_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"wrap") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_wrap() ); }
		if (HX_FIELD_EQ(inName,"self") ) { return ::hx::Val( self_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"get_wrap") ) { return ::hx::Val( get_wrap_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_wrap") ) { return ::hx::Val( set_wrap_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"get_value") ) { return ::hx::Val( get_value_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_value") ) { return ::hx::Val( set_value_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"dataSource") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_dataSource() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"scrollToTop") ) { return ::hx::Val( scrollToTop_dyn() ); }
		if (HX_FIELD_EQ(inName,"placeholder") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_placeholder() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"scrollToBottom") ) { return ::hx::Val( scrollToBottom_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_dataSource") ) { return ::hx::Val( get_dataSource_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_dataSource") ) { return ::hx::Val( set_dataSource_dyn() ); }
		if (HX_FIELD_EQ(inName,"cloneComponent") ) { return ::hx::Val( cloneComponent_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"get_placeholder") ) { return ::hx::Val( get_placeholder_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_placeholder") ) { return ::hx::Val( set_placeholder_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"registerComposite") ) { return ::hx::Val( registerComposite_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"registerBehaviours") ) { return ::hx::Val( registerBehaviours_dyn() ); }
		if (HX_FIELD_EQ(inName,"autoScrollToBottom") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_autoScrollToBottom() ); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"get_autoScrollToBottom") ) { return ::hx::Val( get_autoScrollToBottom_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_autoScrollToBottom") ) { return ::hx::Val( set_autoScrollToBottom_dyn() ); }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"invalidateComponentScroll") ) { return ::hx::Val( invalidateComponentScroll_dyn() ); }
		if (HX_FIELD_EQ(inName,"validateComponentInternal") ) { return ::hx::Val( validateComponentInternal_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val TextArea_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"wrap") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_wrap(inValue.Cast< bool >()) ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"dataSource") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_dataSource(inValue.Cast<  ::haxe::ui::data::DataSource >()) ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"placeholder") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_placeholder(inValue.Cast< ::String >()) ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"autoScrollToBottom") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_autoScrollToBottom(inValue.Cast< bool >()) ); }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TextArea_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("placeholder",73,73,f3,ba));
	outFields->push(HX_("wrap",ca,39,ff,4e));
	outFields->push(HX_("dataSource",a5,76,d3,1d));
	outFields->push(HX_("autoScrollToBottom",c2,6f,37,6f));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *TextArea_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *TextArea_obj_sStaticStorageInfo = 0;
#endif

static ::String TextArea_obj_sMemberFields[] = {
	HX_("scrollToTop",8d,60,f7,5d),
	HX_("scrollToBottom",f3,77,a8,18),
	HX_("invalidateComponentScroll",6f,b9,03,ff),
	HX_("validateComponentInternal",a4,7f,0c,11),
	HX_("registerBehaviours",d9,a7,67,34),
	HX_("get_placeholder",0a,2b,d5,7b),
	HX_("set_placeholder",16,a8,a0,77),
	HX_("get_wrap",53,f5,b9,ce),
	HX_("set_wrap",c7,4e,17,7d),
	HX_("get_dataSource",ee,fe,c8,93),
	HX_("set_dataSource",62,e7,e8,b3),
	HX_("get_autoScrollToBottom",0b,e9,cb,c8),
	HX_("set_autoScrollToBottom",7f,65,77,fc),
	HX_("get_value",c8,db,61,75),
	HX_("set_value",d4,c7,b2,58),
	HX_("cloneComponent",a0,e9,56,26),
	HX_("self",8c,8b,50,4c),
	HX_("registerComposite",24,e5,7f,fe),
	::String(null()) };

::hx::Class TextArea_obj::__mClass;

void TextArea_obj::__register()
{
	TextArea_obj _hx_dummy;
	TextArea_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.components.TextArea",80,b1,9d,f4);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(TextArea_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< TextArea_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TextArea_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TextArea_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace components
