// Generated by Haxe 4.2.0
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventBase
#include <haxe/ui/backend/EventBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventImpl
#include <haxe/ui/backend/EventImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_components_CheckBox
#include <haxe/ui/components/CheckBox.h>
#endif
#ifndef INCLUDED_haxe_ui_components_OptionBox
#include <haxe/ui/components/OptionBox.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_Box
#include <haxe/ui/containers/Box.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_Group
#include <haxe/ui/containers/Group.h>
#endif
#ifndef INCLUDED_haxe_ui_containers__Group_Builder
#include <haxe/ui/containers/_Group/Builder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_CompositeBuilder
#include <haxe/ui/core/CompositeBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_core_InteractiveComponent
#include <haxe/ui/core/InteractiveComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_events_UIEvent
#include <haxe/ui/events/UIEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_focus_IFocusable
#include <haxe/ui/focus/IFocusable.h>
#endif
#ifndef INCLUDED_haxe_ui_util_GUID
#include <haxe/ui/util/GUID.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <haxe/ui/validation/IValidating.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_2ca38027de483072_26_new,"haxe.ui.containers._Group.Builder","new",0x169382e9,"haxe.ui.containers._Group.Builder.new","haxe/ui/containers/Group.hx",26,0xcb175b6a)
HX_LOCAL_STACK_FRAME(_hx_pos_2ca38027de483072_31_addComponent,"haxe.ui.containers._Group.Builder","addComponent",0x67bc46b3,"haxe.ui.containers._Group.Builder.addComponent","haxe/ui/containers/Group.hx",31,0xcb175b6a)
HX_LOCAL_STACK_FRAME(_hx_pos_2ca38027de483072_37_addComponentAt,"haxe.ui.containers._Group.Builder","addComponentAt",0x0461d286,"haxe.ui.containers._Group.Builder.addComponentAt","haxe/ui/containers/Group.hx",37,0xcb175b6a)
HX_LOCAL_STACK_FRAME(_hx_pos_2ca38027de483072_44_childAdd,"haxe.ui.containers._Group.Builder","childAdd",0xa2c466bc,"haxe.ui.containers._Group.Builder.childAdd","haxe/ui/containers/Group.hx",44,0xcb175b6a)
HX_LOCAL_STACK_FRAME(_hx_pos_2ca38027de483072_54_processGroupChild,"haxe.ui.containers._Group.Builder","processGroupChild",0x1b8b9975,"haxe.ui.containers._Group.Builder.processGroupChild","haxe/ui/containers/Group.hx",54,0xcb175b6a)
HX_LOCAL_STACK_FRAME(_hx_pos_2ca38027de483072_69_childChangeHandler,"haxe.ui.containers._Group.Builder","childChangeHandler",0xb4e8b895,"haxe.ui.containers._Group.Builder.childChangeHandler","haxe/ui/containers/Group.hx",69,0xcb175b6a)
namespace haxe{
namespace ui{
namespace containers{
namespace _Group{

void Builder_obj::__construct( ::haxe::ui::containers::Group group){
            	HX_STACKFRAME(&_hx_pos_2ca38027de483072_26_new)
HXLINE(  27)		super::__construct(group);
HXLINE(  28)		this->_group = group;
            	}

Dynamic Builder_obj::__CreateEmpty() { return new Builder_obj; }

void *Builder_obj::_hx_vtable = 0;

Dynamic Builder_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Builder_obj > _hx_result = new Builder_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Builder_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0472fd8d) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x0472fd8d;
	} else {
		return inClassId==(int)0x7cb160cf;
	}
}

 ::haxe::ui::core::Component Builder_obj::addComponent( ::haxe::ui::core::Component child){
            	HX_STACKFRAME(&_hx_pos_2ca38027de483072_31_addComponent)
HXLINE(  32)		this->childAdd(child);
HXLINE(  34)		return this->super::addComponent(child);
            	}


 ::haxe::ui::core::Component Builder_obj::addComponentAt( ::haxe::ui::core::Component child,int index){
            	HX_STACKFRAME(&_hx_pos_2ca38027de483072_37_addComponentAt)
HXLINE(  38)		this->childAdd(child);
HXLINE(  40)		return this->super::addComponentAt(child,index);
            	}


void Builder_obj::childAdd( ::haxe::ui::core::Component child){
            	HX_STACKFRAME(&_hx_pos_2ca38027de483072_44_childAdd)
HXDLIN(  44)		if (::Std_obj::isOfType(child,::hx::ClassOf< ::haxe::ui::core::InteractiveComponent >())) {
HXLINE(  45)			this->processGroupChild(child);
            		}
            		else {
HXLINE(  47)			::Array< ::Dynamic> interactiveChildren = child->findComponents(null(),::hx::ClassOf< ::haxe::ui::core::InteractiveComponent >(),null());
HXLINE(  48)			{
HXLINE(  48)				int _g = 0;
HXDLIN(  48)				while((_g < interactiveChildren->length)){
HXLINE(  48)					 ::haxe::ui::core::InteractiveComponent interactiveChild = interactiveChildren->__get(_g).StaticCast<  ::haxe::ui::core::InteractiveComponent >();
HXDLIN(  48)					_g = (_g + 1);
HXLINE(  49)					this->processGroupChild(interactiveChild);
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Builder_obj,childAdd,(void))

void Builder_obj::processGroupChild( ::haxe::ui::core::Component child){
            	HX_STACKFRAME(&_hx_pos_2ca38027de483072_54_processGroupChild)
HXLINE(  55)		if (::Std_obj::isOfType(child,::hx::ClassOf< ::haxe::ui::components::OptionBox >())) {
HXLINE(  57)			if (::hx::IsNull( this->_group->get_componentGroup() )) {
HXLINE(  58)				 ::haxe::ui::containers::Group _hx_tmp = this->_group;
HXDLIN(  58)				_hx_tmp->set_componentGroup((HX_("group",3f,b3,f4,99) + ::haxe::ui::util::GUID_obj::uuid()));
            			}
HXLINE(  60)			::hx::TCast<  ::haxe::ui::components::OptionBox >::cast(child)->set_componentGroup(this->_group->get_componentGroup());
            		}
HXLINE(  62)		if ((child->hasEvent(HX_("change",70,91,72,b7),this->childChangeHandler_dyn()) == false)) {
HXLINE(  64)			child->registerEvent(HX_("change",70,91,72,b7),this->childChangeHandler_dyn(),null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Builder_obj,processGroupChild,(void))

void Builder_obj::childChangeHandler( ::haxe::ui::events::UIEvent e){
            	HX_STACKFRAME(&_hx_pos_2ca38027de483072_69_childChangeHandler)
HXDLIN(  69)		 ::haxe::ui::containers::Group _hx_tmp = this->_group;
HXDLIN(  69)		_hx_tmp->dispatch(e->clone());
            	}


HX_DEFINE_DYNAMIC_FUNC1(Builder_obj,childChangeHandler,(void))


::hx::ObjectPtr< Builder_obj > Builder_obj::__new( ::haxe::ui::containers::Group group) {
	::hx::ObjectPtr< Builder_obj > __this = new Builder_obj();
	__this->__construct(group);
	return __this;
}

::hx::ObjectPtr< Builder_obj > Builder_obj::__alloc(::hx::Ctx *_hx_ctx, ::haxe::ui::containers::Group group) {
	Builder_obj *__this = (Builder_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Builder_obj), true, "haxe.ui.containers._Group.Builder"));
	*(void **)__this = Builder_obj::_hx_vtable;
	__this->__construct(group);
	return __this;
}

Builder_obj::Builder_obj()
{
}

void Builder_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Builder);
	HX_MARK_MEMBER_NAME(_group,"_group");
	 ::haxe::ui::core::CompositeBuilder_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Builder_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_group,"_group");
	 ::haxe::ui::core::CompositeBuilder_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val Builder_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"_group") ) { return ::hx::Val( _group ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"childAdd") ) { return ::hx::Val( childAdd_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"addComponent") ) { return ::hx::Val( addComponent_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"addComponentAt") ) { return ::hx::Val( addComponentAt_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"processGroupChild") ) { return ::hx::Val( processGroupChild_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"childChangeHandler") ) { return ::hx::Val( childChangeHandler_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Builder_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"_group") ) { _group=inValue.Cast<  ::haxe::ui::containers::Group >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Builder_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_group",80,fa,db,95));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Builder_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::haxe::ui::containers::Group */ ,(int)offsetof(Builder_obj,_group),HX_("_group",80,fa,db,95)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Builder_obj_sStaticStorageInfo = 0;
#endif

static ::String Builder_obj_sMemberFields[] = {
	HX_("_group",80,fa,db,95),
	HX_("addComponent",5c,12,a8,0e),
	HX_("addComponentAt",6f,9a,96,16),
	HX_("childAdd",e5,e9,44,70),
	HX_("processGroupChild",2c,e9,4f,85),
	HX_("childChangeHandler",fe,28,ea,d6),
	::String(null()) };

::hx::Class Builder_obj::__mClass;

void Builder_obj::__register()
{
	Builder_obj _hx_dummy;
	Builder_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.containers._Group.Builder",77,da,33,03);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Builder_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Builder_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Builder_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Builder_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace containers
} // end namespace _Group
