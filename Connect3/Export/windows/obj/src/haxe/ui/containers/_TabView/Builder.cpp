// Generated by Haxe 4.2.0
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventBase
#include <haxe/ui/backend/EventBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventImpl
#include <haxe/ui/backend/EventImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_components_Button
#include <haxe/ui/components/Button.h>
#endif
#ifndef INCLUDED_haxe_ui_components_TabBar
#include <haxe/ui/components/TabBar.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_Box
#include <haxe/ui/containers/Box.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_TabView
#include <haxe/ui/containers/TabView.h>
#endif
#ifndef INCLUDED_haxe_ui_containers__TabView_Builder
#include <haxe/ui/containers/_TabView/Builder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_CompositeBuilder
#include <haxe/ui/core/CompositeBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_core_InteractiveComponent
#include <haxe/ui/core/InteractiveComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_events_UIEvent
#include <haxe/ui/events/UIEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_focus_IFocusable
#include <haxe/ui/focus/IFocusable.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_ILayout
#include <haxe/ui/layouts/ILayout.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_Layout
#include <haxe/ui/layouts/Layout.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_LayoutFactory
#include <haxe/ui/layouts/LayoutFactory.h>
#endif
#ifndef INCLUDED_haxe_ui_util_VariantType
#include <haxe/ui/util/VariantType.h>
#endif
#ifndef INCLUDED_haxe_ui_util__Variant_Variant_Impl_
#include <haxe/ui/util/_Variant/Variant_Impl_.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <haxe/ui/validation/IValidating.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a1723373ba00b7bf_297_new,"haxe.ui.containers._TabView.Builder","new",0x6e18f444,"haxe.ui.containers._TabView.Builder.new","haxe/ui/containers/TabView.hx",297,0xfd8842ef)
HX_LOCAL_STACK_FRAME(_hx_pos_a1723373ba00b7bf_311_create,"haxe.ui.containers._TabView.Builder","create",0xf096c998,"haxe.ui.containers._TabView.Builder.create","haxe/ui/containers/TabView.hx",311,0xfd8842ef)
HX_LOCAL_STACK_FRAME(_hx_pos_a1723373ba00b7bf_329_get_numComponents,"haxe.ui.containers._TabView.Builder","get_numComponents",0x6e9d2137,"haxe.ui.containers._TabView.Builder.get_numComponents","haxe/ui/containers/TabView.hx",329,0xfd8842ef)
HX_LOCAL_STACK_FRAME(_hx_pos_a1723373ba00b7bf_332_addComponent,"haxe.ui.containers._TabView.Builder","addComponent",0xb0f951f8,"haxe.ui.containers._TabView.Builder.addComponent","haxe/ui/containers/TabView.hx",332,0xfd8842ef)
HX_LOCAL_STACK_FRAME(_hx_pos_a1723373ba00b7bf_355_addComponentAt,"haxe.ui.containers._TabView.Builder","addComponentAt",0xdf6bf90b,"haxe.ui.containers._TabView.Builder.addComponentAt","haxe/ui/containers/TabView.hx",355,0xfd8842ef)
HX_LOCAL_STACK_FRAME(_hx_pos_a1723373ba00b7bf_378_onPagePropertyChanged,"haxe.ui.containers._TabView.Builder","onPagePropertyChanged",0xda582695,"haxe.ui.containers._TabView.Builder.onPagePropertyChanged","haxe/ui/containers/TabView.hx",378,0xfd8842ef)
HX_LOCAL_STACK_FRAME(_hx_pos_a1723373ba00b7bf_393_removeComponent,"haxe.ui.containers._TabView.Builder","removeComponent",0x424ff5bd,"haxe.ui.containers._TabView.Builder.removeComponent","haxe/ui/containers/TabView.hx",393,0xfd8842ef)
HX_LOCAL_STACK_FRAME(_hx_pos_a1723373ba00b7bf_406_removeComponentAt,"haxe.ui.containers._TabView.Builder","removeComponentAt",0x6e86d810,"haxe.ui.containers._TabView.Builder.removeComponentAt","haxe/ui/containers/TabView.hx",406,0xfd8842ef)
HX_LOCAL_STACK_FRAME(_hx_pos_a1723373ba00b7bf_412_getComponentIndex,"haxe.ui.containers._TabView.Builder","getComponentIndex",0xb305a72f,"haxe.ui.containers._TabView.Builder.getComponentIndex","haxe/ui/containers/TabView.hx",412,0xfd8842ef)
HX_LOCAL_STACK_FRAME(_hx_pos_a1723373ba00b7bf_415_setComponentIndex,"haxe.ui.containers._TabView.Builder","setComponentIndex",0xd6737f3b,"haxe.ui.containers._TabView.Builder.setComponentIndex","haxe/ui/containers/TabView.hx",415,0xfd8842ef)
HX_LOCAL_STACK_FRAME(_hx_pos_a1723373ba00b7bf_430_getComponentAt,"haxe.ui.containers._TabView.Builder","getComponentAt",0xd13344b6,"haxe.ui.containers._TabView.Builder.getComponentAt","haxe/ui/containers/TabView.hx",430,0xfd8842ef)
HX_LOCAL_STACK_FRAME(_hx_pos_a1723373ba00b7bf_433_findComponent,"haxe.ui.containers._TabView.Builder","findComponent",0x54cc1a28,"haxe.ui.containers._TabView.Builder.findComponent","haxe/ui/containers/TabView.hx",433,0xfd8842ef)
namespace haxe{
namespace ui{
namespace containers{
namespace _TabView{

void Builder_obj::__construct( ::haxe::ui::containers::TabView tabview){
            	HX_STACKFRAME(&_hx_pos_a1723373ba00b7bf_297_new)
HXLINE( 304)		this->_views = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 303)		this->_currentView = null();
HXLINE( 307)		super::__construct(tabview);
HXLINE( 308)		this->_tabview = tabview;
            	}

Dynamic Builder_obj::__CreateEmpty() { return new Builder_obj; }

void *Builder_obj::_hx_vtable = 0;

Dynamic Builder_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Builder_obj > _hx_result = new Builder_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Builder_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0472fd8d) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x0472fd8d;
	} else {
		return inClassId==(int)0x05c1c414;
	}
}

void Builder_obj::create(){
            	HX_GC_STACKFRAME(&_hx_pos_a1723373ba00b7bf_311_create)
HXLINE( 312)		if (::hx::IsNull( this->_content )) {
HXLINE( 313)			this->_content =  ::haxe::ui::containers::Box_obj::__alloc( HX_CTX );
HXLINE( 314)			this->_content->set_id(HX_("tabview-content",e6,41,c6,35));
HXLINE( 315)			this->_content->addClass(HX_("tabview-content",e6,41,c6,35),null(),null());
HXLINE( 316)			 ::haxe::ui::containers::Box _hx_tmp = this->_content;
HXDLIN( 316)			_hx_tmp->set_layout(::haxe::ui::layouts::LayoutFactory_obj::createFromName(HX_("vertical",76,bc,15,6a)));
HXLINE( 317)			this->_tabview->addComponent(this->_content);
            		}
HXLINE( 320)		if (::hx::IsNull( this->_tabs )) {
HXLINE( 321)			this->_tabs =  ::haxe::ui::components::TabBar_obj::__alloc( HX_CTX );
HXLINE( 322)			this->_tabs->set_id(HX_("tabview-tabs",b1,fd,eb,1e));
HXLINE( 323)			this->_tabs->addClass(HX_("tabview-tabs",b1,fd,eb,1e),null(),null());
HXLINE( 324)			this->_tabview->addComponent(this->_tabs);
            		}
            	}


 ::Dynamic Builder_obj::get_numComponents(){
            	HX_STACKFRAME(&_hx_pos_a1723373ba00b7bf_329_get_numComponents)
HXDLIN( 329)		return this->_views->length;
            	}


 ::haxe::ui::core::Component Builder_obj::addComponent( ::haxe::ui::core::Component child){
            	HX_GC_STACKFRAME(&_hx_pos_a1723373ba00b7bf_332_addComponent)
HXLINE( 333)		bool _hx_tmp;
HXDLIN( 333)		if (::hx::IsInstanceNotEq( child,this->_content )) {
HXLINE( 333)			_hx_tmp = ::hx::IsInstanceNotEq( child,this->_tabs );
            		}
            		else {
HXLINE( 333)			_hx_tmp = false;
            		}
HXDLIN( 333)		if (_hx_tmp) {
HXLINE( 334)			::String text = child->get_text();
HXLINE( 335)			::String icon = null();
HXLINE( 336)			if (::Std_obj::isOfType(child,::hx::ClassOf< ::haxe::ui::containers::Box >())) {
HXLINE( 337)				icon = ::hx::TCast<  ::haxe::ui::containers::Box >::cast(child)->get_icon();
            			}
HXLINE( 339)			child->registerEvent(HX_("propertyChange",a5,bb,45,6a),this->onPagePropertyChanged_dyn(),null());
HXLINE( 340)			this->_views->push(child);
HXLINE( 341)			 ::haxe::ui::components::Button button =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 342)			button->set_text(text);
HXLINE( 343)			button->set_icon(::haxe::ui::util::_Variant::Variant_Impl__obj::fromString(icon));
HXLINE( 344)			button->set_tooltip(child->get_tooltip());
HXLINE( 345)			if (::hx::IsNotNull( child->get_id() )) {
HXLINE( 346)				button->set_id((child->get_id() + HX_("_button",91,73,57,48)));
            			}
HXLINE( 348)			this->_tabs->addComponent(button);
HXLINE( 350)			return child;
            		}
HXLINE( 352)		return null();
            	}


 ::haxe::ui::core::Component Builder_obj::addComponentAt( ::haxe::ui::core::Component child,int index){
            	HX_GC_STACKFRAME(&_hx_pos_a1723373ba00b7bf_355_addComponentAt)
HXLINE( 356)		bool _hx_tmp;
HXDLIN( 356)		if (::hx::IsInstanceNotEq( child,this->_content )) {
HXLINE( 356)			_hx_tmp = ::hx::IsInstanceNotEq( child,this->_tabs );
            		}
            		else {
HXLINE( 356)			_hx_tmp = false;
            		}
HXDLIN( 356)		if (_hx_tmp) {
HXLINE( 357)			::String text = child->get_text();
HXLINE( 358)			::String icon = null();
HXLINE( 359)			if (::Std_obj::isOfType(child,::hx::ClassOf< ::haxe::ui::containers::Box >())) {
HXLINE( 360)				icon = ::hx::TCast<  ::haxe::ui::containers::Box >::cast(child)->get_icon();
            			}
HXLINE( 362)			child->registerEvent(HX_("propertyChange",a5,bb,45,6a),this->onPagePropertyChanged_dyn(),null());
HXLINE( 363)			this->_views->insert(index,child);
HXLINE( 364)			 ::haxe::ui::components::Button button =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 365)			button->set_text(text);
HXLINE( 366)			button->set_icon(::haxe::ui::util::_Variant::Variant_Impl__obj::fromString(icon));
HXLINE( 367)			button->set_tooltip(child->get_tooltip());
HXLINE( 368)			if (::hx::IsNotNull( child->get_id() )) {
HXLINE( 369)				button->set_id((child->get_id() + HX_("_button",91,73,57,48)));
            			}
HXLINE( 371)			this->_tabs->addComponentAt(button,index);
HXLINE( 372)			return child;
            		}
HXLINE( 374)		return null();
            	}


void Builder_obj::onPagePropertyChanged( ::haxe::ui::events::UIEvent event){
            	HX_STACKFRAME(&_hx_pos_a1723373ba00b7bf_378_onPagePropertyChanged)
HXDLIN( 378)		if (::hx::IsEq( event->data,HX_("text",ad,cc,f9,4c) )) {
HXLINE( 379)			int index = this->_views->indexOf(event->target,null());
HXLINE( 380)			 ::haxe::ui::core::Component button = this->_tabs->getTab(index);
HXLINE( 381)			bool _hx_tmp;
HXDLIN( 381)			if (::hx::IsNotNull( button )) {
HXLINE( 381)				::String _hx_tmp1 = button->get_text();
HXDLIN( 381)				_hx_tmp = (_hx_tmp1 != event->target->get_text());
            			}
            			else {
HXLINE( 381)				_hx_tmp = false;
            			}
HXDLIN( 381)			if (_hx_tmp) {
HXLINE( 382)				button->set_text(event->target->get_text());
            			}
            		}
            		else {
HXLINE( 384)			if (::hx::IsEq( event->data,HX_("icon",79,e7,b2,45) )) {
HXLINE( 385)				int index = this->_views->indexOf(event->target,null());
HXLINE( 386)				 ::haxe::ui::components::Button button = ::hx::TCast<  ::haxe::ui::components::Button >::cast(this->_tabs->getTab(index));
HXLINE( 387)				bool _hx_tmp;
HXDLIN( 387)				if (::hx::IsNotNull( button )) {
HXLINE( 387)					 ::haxe::ui::util::VariantType _hx_tmp1 = button->get_icon();
HXDLIN( 387)					_hx_tmp = ::haxe::ui::util::_Variant::Variant_Impl__obj::neq(_hx_tmp1,::haxe::ui::util::_Variant::Variant_Impl__obj::fromString(::hx::TCast<  ::haxe::ui::containers::Box >::cast(event->target)->get_icon()));
            				}
            				else {
HXLINE( 387)					_hx_tmp = false;
            				}
HXDLIN( 387)				if (_hx_tmp) {
HXLINE( 388)					button->set_icon(::haxe::ui::util::_Variant::Variant_Impl__obj::fromString(::hx::TCast<  ::haxe::ui::containers::Box >::cast(event->target)->get_icon()));
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Builder_obj,onPagePropertyChanged,(void))

 ::haxe::ui::core::Component Builder_obj::removeComponent( ::haxe::ui::core::Component child,::hx::Null< bool >  __o_dispose,::hx::Null< bool >  __o_invalidate){
            		bool dispose = __o_dispose.Default(true);
            		bool invalidate = __o_invalidate.Default(true);
            	HX_STACKFRAME(&_hx_pos_a1723373ba00b7bf_393_removeComponent)
HXLINE( 394)		bool _hx_tmp;
HXDLIN( 394)		if (::hx::IsInstanceNotEq( child,this->_content )) {
HXLINE( 394)			_hx_tmp = ::hx::IsInstanceNotEq( child,this->_tabs );
            		}
            		else {
HXLINE( 394)			_hx_tmp = false;
            		}
HXDLIN( 394)		if (_hx_tmp) {
HXLINE( 395)			int _g = this->_views->indexOf(child,null());
HXDLIN( 395)			if ((_g != -1)) {
HXLINE( 397)				int i = _g;
HXLINE( 398)				this->_views->removeRange(i,1);
HXLINE( 399)				this->_tabs->removeComponentAt(i,dispose,invalidate);
HXLINE( 400)				return child;
            			}
            		}
HXLINE( 403)		return null();
            	}


 ::haxe::ui::core::Component Builder_obj::removeComponentAt(int index,::hx::Null< bool >  __o_dispose,::hx::Null< bool >  __o_invalidate){
            		bool dispose = __o_dispose.Default(true);
            		bool invalidate = __o_invalidate.Default(true);
            	HX_STACKFRAME(&_hx_pos_a1723373ba00b7bf_406_removeComponentAt)
HXLINE( 407)		this->_views->removeRange(index,1);
HXLINE( 408)		return this->_tabs->removeComponentAt(index,dispose,invalidate);
            	}


int Builder_obj::getComponentIndex( ::haxe::ui::core::Component child){
            	HX_STACKFRAME(&_hx_pos_a1723373ba00b7bf_412_getComponentIndex)
HXDLIN( 412)		return this->_views->indexOf(child,null());
            	}


 ::haxe::ui::core::Component Builder_obj::setComponentIndex( ::haxe::ui::core::Component child,int index){
            	HX_STACKFRAME(&_hx_pos_a1723373ba00b7bf_415_setComponentIndex)
HXLINE( 416)		bool _hx_tmp;
HXDLIN( 416)		if (::hx::IsInstanceNotEq( child,this->_content )) {
HXLINE( 416)			_hx_tmp = ::hx::IsInstanceNotEq( child,this->_tabs );
            		}
            		else {
HXLINE( 416)			_hx_tmp = false;
            		}
HXDLIN( 416)		if (_hx_tmp) {
HXLINE( 417)			int _g = this->_views->indexOf(child,null());
HXDLIN( 417)			if ((_g != -1)) {
HXLINE( 419)				int i = _g;
HXLINE( 420)				this->_views->removeRange(i,1);
HXLINE( 421)				this->_views->insert(index,child);
HXLINE( 422)				 ::haxe::ui::components::TabBar _hx_tmp = this->_tabs;
HXDLIN( 422)				_hx_tmp->setComponentIndex(this->_tabs->getComponentAt(i),index);
HXLINE( 423)				return child;
            			}
            		}
HXLINE( 426)		return null();
            	}


 ::haxe::ui::core::Component Builder_obj::getComponentAt(int index){
            	HX_STACKFRAME(&_hx_pos_a1723373ba00b7bf_430_getComponentAt)
HXDLIN( 430)		return this->_views->__get(index).StaticCast<  ::haxe::ui::core::Component >();
            	}


 ::Dynamic Builder_obj::findComponent(::String criteria,::hx::Class type, ::Dynamic recursive,::String searchType){
            	HX_STACKFRAME(&_hx_pos_a1723373ba00b7bf_433_findComponent)
HXLINE( 434)		 ::Dynamic match = this->super::findComponent(criteria,type,recursive,searchType);
HXLINE( 435)		if (::hx::IsNull( match )) {
HXLINE( 436)			int _g = 0;
HXDLIN( 436)			::Array< ::Dynamic> _g1 = this->_views;
HXDLIN( 436)			while((_g < _g1->length)){
HXLINE( 436)				 ::haxe::ui::core::Component view = _g1->__get(_g).StaticCast<  ::haxe::ui::core::Component >();
HXDLIN( 436)				_g = (_g + 1);
HXLINE( 437)				match = view->findComponent(criteria,type,recursive,searchType);
HXLINE( 438)				if (view->matchesSearch(criteria,type,searchType)) {
HXLINE( 439)					return view;
            				}
            				else {
HXLINE( 441)					match = view->findComponent(criteria,type,recursive,searchType);
            				}
HXLINE( 444)				if (::hx::IsNotNull( match )) {
HXLINE( 445)					goto _hx_goto_11;
            				}
            			}
            			_hx_goto_11:;
            		}
HXLINE( 449)		return match;
            	}



::hx::ObjectPtr< Builder_obj > Builder_obj::__new( ::haxe::ui::containers::TabView tabview) {
	::hx::ObjectPtr< Builder_obj > __this = new Builder_obj();
	__this->__construct(tabview);
	return __this;
}

::hx::ObjectPtr< Builder_obj > Builder_obj::__alloc(::hx::Ctx *_hx_ctx, ::haxe::ui::containers::TabView tabview) {
	Builder_obj *__this = (Builder_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Builder_obj), true, "haxe.ui.containers._TabView.Builder"));
	*(void **)__this = Builder_obj::_hx_vtable;
	__this->__construct(tabview);
	return __this;
}

Builder_obj::Builder_obj()
{
}

void Builder_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Builder);
	HX_MARK_MEMBER_NAME(_tabview,"_tabview");
	HX_MARK_MEMBER_NAME(_tabs,"_tabs");
	HX_MARK_MEMBER_NAME(_content,"_content");
	HX_MARK_MEMBER_NAME(_currentView,"_currentView");
	HX_MARK_MEMBER_NAME(_views,"_views");
	 ::haxe::ui::core::CompositeBuilder_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Builder_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_tabview,"_tabview");
	HX_VISIT_MEMBER_NAME(_tabs,"_tabs");
	HX_VISIT_MEMBER_NAME(_content,"_content");
	HX_VISIT_MEMBER_NAME(_currentView,"_currentView");
	HX_VISIT_MEMBER_NAME(_views,"_views");
	 ::haxe::ui::core::CompositeBuilder_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val Builder_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"_tabs") ) { return ::hx::Val( _tabs ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"_views") ) { return ::hx::Val( _views ); }
		if (HX_FIELD_EQ(inName,"create") ) { return ::hx::Val( create_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"_tabview") ) { return ::hx::Val( _tabview ); }
		if (HX_FIELD_EQ(inName,"_content") ) { return ::hx::Val( _content ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"_currentView") ) { return ::hx::Val( _currentView ); }
		if (HX_FIELD_EQ(inName,"addComponent") ) { return ::hx::Val( addComponent_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"findComponent") ) { return ::hx::Val( findComponent_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"addComponentAt") ) { return ::hx::Val( addComponentAt_dyn() ); }
		if (HX_FIELD_EQ(inName,"getComponentAt") ) { return ::hx::Val( getComponentAt_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"removeComponent") ) { return ::hx::Val( removeComponent_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"get_numComponents") ) { return ::hx::Val( get_numComponents_dyn() ); }
		if (HX_FIELD_EQ(inName,"removeComponentAt") ) { return ::hx::Val( removeComponentAt_dyn() ); }
		if (HX_FIELD_EQ(inName,"getComponentIndex") ) { return ::hx::Val( getComponentIndex_dyn() ); }
		if (HX_FIELD_EQ(inName,"setComponentIndex") ) { return ::hx::Val( setComponentIndex_dyn() ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"onPagePropertyChanged") ) { return ::hx::Val( onPagePropertyChanged_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Builder_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"_tabs") ) { _tabs=inValue.Cast<  ::haxe::ui::components::TabBar >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"_views") ) { _views=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"_tabview") ) { _tabview=inValue.Cast<  ::haxe::ui::containers::TabView >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_content") ) { _content=inValue.Cast<  ::haxe::ui::containers::Box >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"_currentView") ) { _currentView=inValue.Cast<  ::haxe::ui::core::Component >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Builder_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_tabview",bb,34,a4,95));
	outFields->push(HX_("_tabs",5d,cc,07,00));
	outFields->push(HX_("_content",ba,e6,2f,53));
	outFields->push(HX_("_currentView",3f,b9,ea,ec));
	outFields->push(HX_("_views",af,2d,e4,32));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Builder_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::haxe::ui::containers::TabView */ ,(int)offsetof(Builder_obj,_tabview),HX_("_tabview",bb,34,a4,95)},
	{::hx::fsObject /*  ::haxe::ui::components::TabBar */ ,(int)offsetof(Builder_obj,_tabs),HX_("_tabs",5d,cc,07,00)},
	{::hx::fsObject /*  ::haxe::ui::containers::Box */ ,(int)offsetof(Builder_obj,_content),HX_("_content",ba,e6,2f,53)},
	{::hx::fsObject /*  ::haxe::ui::core::Component */ ,(int)offsetof(Builder_obj,_currentView),HX_("_currentView",3f,b9,ea,ec)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Builder_obj,_views),HX_("_views",af,2d,e4,32)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Builder_obj_sStaticStorageInfo = 0;
#endif

static ::String Builder_obj_sMemberFields[] = {
	HX_("_tabview",bb,34,a4,95),
	HX_("_tabs",5d,cc,07,00),
	HX_("_content",ba,e6,2f,53),
	HX_("_currentView",3f,b9,ea,ec),
	HX_("_views",af,2d,e4,32),
	HX_("create",fc,66,0f,7c),
	HX_("get_numComponents",53,76,26,3b),
	HX_("addComponent",5c,12,a8,0e),
	HX_("addComponentAt",6f,9a,96,16),
	HX_("onPagePropertyChanged",b1,39,e8,4d),
	HX_("removeComponent",d9,8b,72,50),
	HX_("removeComponentAt",2c,2d,10,3b),
	HX_("getComponentIndex",4b,fc,8e,7f),
	HX_("setComponentIndex",57,d4,fc,a2),
	HX_("getComponentAt",1a,e6,5d,08),
	HX_("findComponent",44,b1,05,f0),
	::String(null()) };

::hx::Class Builder_obj::__mClass;

void Builder_obj::__register()
{
	Builder_obj _hx_dummy;
	Builder_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.containers._TabView.Builder",52,c2,f8,ff);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Builder_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Builder_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Builder_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Builder_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace containers
} // end namespace _TabView
